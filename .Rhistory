")
x <- dbGetQuery(con,str)
x <- dbGetQuery(con,"SELECT
valve.valve_name
FROM
public.valve,
public.valve_to_bellow,
public.valve_to_plug,
public.valve_type,
public.valve_id_to_socet,
public.valve_bellow_type,
public.valve_plug_type
WHERE
valve_to_bellow.valve_bellow_id = valve_bellow_type.valve_bellow_id AND
valve_to_bellow.valve_id = valve.valve_id AND
valve_to_plug.valve_id = valve.valve_id AND
valve_id_to_socet.valve_id = valve.valve_id AND
valve_id_to_socet.valve_type_by_socet = valve_type.valve_type_by_socet AND
valve_plug_type.plug_type_id = valve_to_plug.plug_type_id AND
valve.valve_id <= 8 AND
valve_bellow_type.valve_bellow_id =1 AND
valve_type.valve_type_by_socet =2 AND
valve_plug_type.plug_type_id = 1;")
x <- dbGetQuery(con,"SELECT
valve.valve_name
FROM
public.valve,
public.valve_to_bellow,
public.valve_to_plug,
public.valve_type,
public.valve_id_to_socet,
public.valve_bellow_type,
public.valve_plug_type
WHERE
valve_to_bellow.valve_bellow_id = valve_bellow_type.valve_bellow_id AND
valve_to_bellow.valve_id = valve.valve_id AND
valve_to_plug.valve_id = valve.valve_id AND
valve_id_to_socet.valve_id = valve.valve_id AND
valve_id_to_socet.valve_type_by_socet = valve_type.valve_type_by_socet AND
valve_plug_type.plug_type_id = valve_to_plug.plug_type_id AND
valve.valve_id <= 8 AND
valve_bellow_type.valve_bellow_id =1 AND
valve_type.valve_type_by_socet =2 AND
valve_plug_type.plug_type_id = 1;")
str <- paste0("SELECT
valve.valve_name
FROM
public.valve,
public.valve_bellow_type,
public.valve_id_to_socet,
public.valve_to_bellow,
public.valve_type
WHERE
valve_bellow_type.valve_bellow_id = valve_to_bellow.valve_bellow_id AND
valve_id_to_socet.valve_id = valve.valve_id AND
valve_to_bellow.valve_id = valve.valve_id AND
valve_type.valve_type_by_socet = valve_id_to_socet.valve_type_by_socet AND
valve_bellow_type.valve_bellow_id =", valve_bellow_id ," AND
valve_type.valve_type_by_socet =" ,vale_type_by_socet ,"AND
valve.valve_id BETWEEN 14 AND 17;")
x <- dbGetQuery(con,str)
str <- paste0("SELECT
valve.valve_name
FROM
public.valve,
public.valve_to_bellow,
public.valve_to_plug,
public.valve_type,
public.valve_id_to_socet,
public.valve_bellow_type,
public.valve_plug_type
WHERE
valve_to_bellow.valve_bellow_id = valve_bellow_type.valve_bellow_id AND
valve_to_bellow.valve_id = valve.valve_id AND
valve_to_plug.valve_id = valve.valve_id AND
valve_id_to_socet.valve_id = valve.valve_id AND
valve_id_to_socet.valve_type_by_socet = valve_type.valve_type_by_socet AND
valve_plug_type.plug_type_id = valve_to_plug.plug_type_id AND
valve.valve_id <= 8 AND
valve_bellow_type.valve_bellow_id =", valve_bellow_id, " AND
valve_type.valve_type_by_socet =", vale_type_by_socet, "
")
x <- dbGetQuery(con,str)
str <- paste0("SELECT
valve.valve_name
FROM
public.valve,
public.valve_to_bellow,
public.valve_to_plug,
public.valve_type,
public.valve_id_to_socet,
public.valve_bellow_type,
public.valve_plug_type
WHERE
valve_to_bellow.valve_bellow_id = valve_bellow_type.valve_bellow_id AND
valve_to_bellow.valve_id = valve.valve_id AND
valve_to_plug.valve_id = valve.valve_id AND
valve_id_to_socet.valve_id = valve.valve_id AND
valve_id_to_socet.valve_type_by_socet = valve_type.valve_type_by_socet AND
valve_plug_type.plug_type_id = valve_to_plug.plug_type_id AND
valve_bellow_type.valve_bellow_id =", valve_bellow_id, " AND
valve_type.valve_type_by_socet =", vale_type_by_socet, " AND
valve_plug_type.plug_type_id =", plug_type_id, ";
")
x <- dbGetQuery(con,str)
str <- paste0("SELECT
valve.valve_name
FROM
public.valve,
public.valve_to_bellow,
public.valve_to_plug,
public.valve_type,
public.valve_id_to_socet,
public.valve_bellow_type,
public.valve_plug_type
WHERE
valve_to_bellow.valve_bellow_id = valve_bellow_type.valve_bellow_id AND
valve_to_bellow.valve_id = valve.valve_id AND
valve_to_plug.valve_id = valve.valve_id AND
valve_id_to_socet.valve_id = valve.valve_id AND
valve_id_to_socet.valve_type_by_socet = valve_type.valve_type_by_socet AND
valve_plug_type.plug_type_id = valve_to_plug.plug_type_id
")
x <- dbGetQuery(con,str)
str <- paste0("SELECT
valve.valve_name
FROM
public.valve,
public.valve_to_bellow,
public.valve_to_plug,
public.valve_type,
public.valve_id_to_socet,
public.valve_bellow_type,
public.valve_plug_type
WHERE
valve_to_bellow.valve_bellow_id = valve_bellow_type.valve_bellow_id AND
valve_to_bellow.valve_id = valve.valve_id AND
valve_to_plug.valve_id = valve.valve_id AND
valve_id_to_socet.valve_id = valve.valve_id AND
valve_id_to_socet.valve_type_by_socet = valve_type.valve_type_by_socet AND
valve_plug_type.plug_type_id = valve_to_plug.plug_type_id AND
valve.valve_id <= 8 AND
valve_plug_type.plug_type_id = 1 AND
valve_bellow_type.valve_bellow_id = 1 AND
valve_type.valve_type_by_socet = 1;
")
x <- dbGetQuery(con,str)
str <- paste0("SELECT
valve.valve_name
FROM
public.valve,
public.valve_to_bellow,
public.valve_to_plug,
public.valve_type,
public.valve_id_to_socet,
public.valve_bellow_type,
public.valve_plug_type
WHERE
valve_to_bellow.valve_bellow_id = valve_bellow_type.valve_bellow_id AND
valve_to_bellow.valve_id = valve.valve_id AND
valve_to_plug.valve_id = valve.valve_id AND
valve_id_to_socet.valve_id = valve.valve_id AND
valve_id_to_socet.valve_type_by_socet = valve_type.valve_type_by_socet AND
valve_plug_type.plug_type_id = valve_to_plug.plug_type_id AND
valve.valve_id <= 8 AND
valve_bellow_type.valve_bellow_id =", valve_bellow_id, " AND
valve_type.valve_type_by_socet =", vale_type_by_socet, " AND
valve_plug_type.plug_type_id =", plug_type_id, ";
")
x <- dbGetQuery(con,str)
View(x)
Encoding(x$valve_name) <- "UTF-8"
return(x$valve_name)
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
detail_list <- get_detial_list(con, SELECTED_VALVE())
SELECTED_VALVE()
valve_list <- get_valve_list(con, type = "for details")
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
detail_list <- get_detial_list(con, SELECTED_VALVE())
valve_list <- get_valve_list(con, type = "for details")
View(valve_list)
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
detail_list <- get_detial_list(con, SELECTED_VALVE())
View(detail_list)
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
alve_general == "Клапан регулирующий"
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
library(shiny); runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type
FROM
public.le_modul
WHERE
le_modul.stem_stroke >= 50 AND
le_modul.force_min < 50 AND
le_modul.force_max >= 5 ;")
X <- dbGetQuery(con,str)
con <- okan_db_connect()
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type
FROM
public.le_modul
WHERE
le_modul.stem_stroke >= 50 AND
le_modul.force_min < 50 AND
le_modul.force_max >= 5 ;")
X <- dbGetQuery(con,str)
View(X)
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type
FROM
public.le_modul
WHERE
le_modul.stem_stroke >= 5000 AND
le_modul.force_min < 5000 AND
le_modul.force_max >= 5 ;")
X <- dbGetQuery(con,str)
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type
FROM
public.le_modul
WHERE
le_modul.stem_stroke >= 50 AND
le_modul.force_min < 5000 AND
le_modul.force_max >= 5000 ;")
X <- dbGetQuery(con,str)
View(X)
source(func_folder)
current_folder <- "c:/_IR_F/okanval/"
func_folder <- paste0(current_folder,file.path("func", "get_methods.R"))
source(func_folder)
return(x)
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
X <- dbGetQuery(con,str)
View(X)
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type,
le_modul.stem_stroke
FROM
public.le_modul
WHERE
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, ";")
X <- dbGetQuery(con,str)
View(X)
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type,
le_modul.stem_stroke
FROM
public.le_modul
WHERE
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, ";")
X <- dbGetQuery(con,str)
View(X)
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type,
MIN(le_modul.stem_stroke)
FROM
public.le_modul
WHERE
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, ";")
X <- dbGetQuery(con,str)
str <- paste0("SELECT
MIN(le_modul.stem_stroke)
FROM
public.le_modul
WHERE
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, ";")
X <- dbGetQuery(con,str)
View(X)
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type,
le_modul.stem_stroke
FROM
public.le_modul
WHERE
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, "
HAVING MIN(le_modul.stem_stroke);")
X <- dbGetQuery(con,str)
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type,
MIN (le_modul.stem_stroke)
FROM
public.le_modul
WHERE
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, ";")
X <- dbGetQuery(con,str)
str
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type,
FROM
public.le_modul
WHERE
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, ";")
X <- dbGetQuery(con,str)
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type,
FROM
public.le_modul
WHERE
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, ";")
X <- dbGetQuery(con,str)
str <- paste0("SELECT
le_modul.le_modul_id,
le_modul.modul_type,
le_modul.stem_stroke
FROM
public.le_modul
WHERE
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, ";")
X <- dbGetQuery(con,str)
View(X)
y <- X[min(X$stem_stroke)]
y <- X[min(X$stem_stroke),]
View(y)
y <- X[,min(X$stem_stroke)]
y <- X[min(X$stem_stroke)]
y <- x[min(X$stem_stroke)]
x <- dbGetQuery(con,str)
y <- x[min(X$stem_stroke)]
y <- x[min(x$stem_stroke)]
y <- min(x$stem_stroke)]
y <- min(x$stem_stroke)
y <- x[which(x$stem_stroke == min(x$stem_stroke)),]
View(y)
str <- paste0("SELECT
le_modul.modul_type,
le_modul.stem_stroke
FROM
public.le_modul
WHERE
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, ";")
x <- dbGetQuery(con,str)
x <- x[which(x$stem_stroke == min(x$stem_stroke)),]
View(x)
return(x[])
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
library(shiny); runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
speed <- stem_stroke / close_time
str <- paste0("SELECT
le_modul.modul_type,
eldrive.eldrive_name,
eldrive.rotation_speed,
le_modul.stem_stroke,
FROM
public.eldrive,
public.le_to_eldrive,
public.le_modul
WHERE
le_to_eldrive.eldrive_id = eldrive.eldrive_id AND
le_modul.le_modul_id = le_to_eldrive.le_module_id AND
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, "
eldrive.rotation_speed_for_le_modul >= ", speed, ";")
x <- dbGetQuery(con,str)
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
speed <- stem_stroke / close_time
stem_force <- input$stem_force * safety_factor
input$stem_force
runApp('Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
speed <- stem_stroke / close_time
str <- paste0("SELECT
le_modul.modul_type,
eldrive.eldrive_name,
eldrive.rotation_speed,
le_modul.stem_stroke,
FROM
public.eldrive,
public.le_to_eldrive,
public.le_modul
WHERE
le_to_eldrive.eldrive_id = eldrive.eldrive_id AND
le_modul.le_modul_id = le_to_eldrive.le_module_id AND
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, "
eldrive.rotation_speed_for_le_modul >= ", speed, ";")
x <- dbGetQuery(con,str)
str <- paste0("SELECT
le_modul.modul_type,
eldrive.eldrive_name,
eldrive.rotation_speed,
le_modul.stem_stroke
FROM
public.eldrive,
public.le_to_eldrive,
public.le_modul
WHERE
le_to_eldrive.eldrive_id = eldrive.eldrive_id AND
le_modul.le_modul_id = le_to_eldrive.le_module_id AND
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, "
eldrive.rotation_speed_for_le_modul >= ", speed, ";")
x <- dbGetQuery(con,str)
str <- paste0("SELECT
le_modul.modul_type,
eldrive.eldrive_name,
eldrive.rotation_speed,
le_modul.stem_stroke
FROM
public.eldrive,
public.le_to_eldrive,
public.le_modul
WHERE
le_to_eldrive.eldrive_id = eldrive.eldrive_id AND
le_modul.le_modul_id = le_to_eldrive.le_module_id AND
le_modul.stem_stroke >=", stem_stroke, "AND
le_modul.force_min <", stem_force ,"AND
le_modul.force_max >=", stem_force, "AND
eldrive.rotation_speed_for_le_modul >= ", speed, ";")
x <- dbGetQuery(con,str)
View(x)
x <- x[which(x$stem_stroke == min(x$stem_stroke)),]
View(x)
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
View(x)
pi
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
torque <- stem_force * stem_diameter / 2 * (nesessary_number_of_rotations * thread_pitch /
(pi *  stem_diameter) + 0.144) / 1000
torque <- stem_force * stem_diameter / 2 * (nesessary_number_of_rotations * thread_pitch /
(pi *  stem_diameter) + 0.144)
nesessary_number_of_rotations <- stem_stroke / (close_time * thread_pitch * 3)
torque <- stem_force * stem_diameter / 2 * (nesessary_number_of_rotations * thread_pitch /
(pi *  stem_diameter) + 0.144) / 1000
nesessary_number_of_rotations <- stem_stroke / (close_time * thread_pitch * multithread)
torque <- stem_force * stem_diameter / 2 * (nesessary_number_of_rotations * thread_pitch /
(pi *  stem_diameter) + 0.144) / 1000
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
library(shiny); runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
Sys.setlocale("LC_CTYPE", "UTF-8")
Sys.setlocale("LC_CTYPE", "Russian")
Sys.setlocale("LC_CTYPE", "English")
Sys.setlocale("LC_CTYPE", "English.UTF-8")
Sys.setlocale("LC_CTYPE", "en_GB.UTF-8")
Sys.setlocale("LC_CTYPE", "ru-RU")
Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
library(RSelenium)
library(testthat)
remDr$open(silent = TRUE)
appURL <- "http://127.0.0.1:4154"
remDr$close()
library(shiny); runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
source(observ_folder, encoding = "latin1", local = TRUE)
source('C:/_IR_F/okanval/server/observ_func.R', encoding = 'UTF-8', echo=TRUE)
source('C:/_IR_F/okanval/server/observ_func.R', encoding = "latin1", local = TRUE)
source(reactive_qa_func_folder, encoding = 'UTF-8',local = TRUE)
source(reactive_qa_func_folder, encoding = 'latin1',local = TRUE)
source(observ_folder, encoding = "UTF-8", local = TRUE)
runApp('Valve_QA_table_viewer.R')
source(observ_folder, encoding = "UTF-8", local = TRUE)
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
library(shiny); runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
library(shiny); runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
Sys.setlocale('LC_ALL','ru-ru')
Sys.setlocale('LC_ALL','ru_RU')
Sys.setlocale(,"ru_RU")
Sys.setlocale('LC_ALL','Russian')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
runApp('C:/_IR_F/okanval/Valve_QA_table_viewer.R')
